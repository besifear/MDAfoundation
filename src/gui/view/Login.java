/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.view;

import bl.AppException;
import bl.UserInterface;
import bl.UserRepository;
import bl.LogsInterface;
import bl.LogsRepository;
import bl.EntMngClass;
import ejb.Users;
import ejb.Logs;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author ARDIT
 */
public class Login extends javax.swing.JFrame {
    static UserInterface userir;
    LogsInterface logsir;
    
    public Login() throws AppException {
        try { 
    UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"); 
        } catch (Exception ex) { 
    ex.printStackTrace(); 
    }
    
        setSize(452,605);
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int jFramewidth=this.getSize().width;
        int jFrameheight=this.getSize().height;
        int locationx=(dim.width-jFramewidth)/2;
        int locationy=(dim.height-jFrameheight)/2;
        this.setLocation(locationx,locationy);
        initComponents();
        userir=new UserRepository(new EntMngClass("Checker","12345","localhost").getEntityManager());
        usertxtf.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        usertxtf = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        serveriptxtf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 120, 30));

        usertxtf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usertxtf.setBorder(null);
        usertxtf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usertxtfKeyPressed(evt);
            }
        });
        jPanel1.add(usertxtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 235, 225, 30));

        pass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pass.setBorder(null);
        pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passKeyPressed(evt);
            }
        });
        jPanel1.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 335, 225, 30));

        serveriptxtf.setText("localhost");
        serveriptxtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serveriptxtfActionPerformed(evt);
            }
        });
        serveriptxtf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serveriptxtfKeyPressed(evt);
            }
        });
        jPanel1.add(serveriptxtf, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photos/loginmda.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 452, 605));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passKeyPressed
       
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        loginMethod();
       }
    }//GEN-LAST:event_passKeyPressed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
    loginMethod();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void serveriptxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serveriptxtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serveriptxtfActionPerformed

    private void usertxtfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usertxtfKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        loginMethod();
       }
    }//GEN-LAST:event_usertxtfKeyPressed

    private void serveriptxtfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serveriptxtfKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        loginMethod();
       }
    }//GEN-LAST:event_serveriptxtfKeyPressed
    
    
    public void loginMethod(){
       String username=usertxtf.getText();
       String password=pass.getText();       
       String serverip=serveriptxtf.getText();
       Users user;
       Logs l=new Logs();
       try{
       
       EntMngClass emc=new EntMngClass(username.trim(),password.trim(),serverip.trim());
       UserInterface userir=new UserRepository(emc.getEntityManager());
       String salt = userir.findSalt(username);
       user=userir.findByUsernamePassword(username,userir.kripto(salt+password));
       
       logsir=new LogsRepository(emc.getEntityManager());
              
       Date date = logsir.findDate();
        Time time=logsir.findTime();
        Date d1;
        Date d2;
        DateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        DateFormat sdf2 = new SimpleDateFormat("HH:mm");
        String today=sdf.format(date);
        String koha=sdf2.format(date);
        String Mesazhi=user.getName()+" "+user.getSurname()+" me username-in: "+user.getUsername()+" Është kyqur në program në datën : "+today +" në ora "+koha;
        
        l.setUseri(user.getName()+" "+user.getSurname()+" - "+user.getUsername());
        l.setKoha(time);
        l.setDita(date);
        l.setMesazhi(Mesazhi);
        l.setLloji("Login");
        l.setUsername(user);
        
        logsir.create(l);
        if(userir.getNumOfLogins(user)==0){
            this.dispose();
            new PasswordChangeFrame(user).setVisible(true);
        }else{  
            test t=new test(user,emc.getEntityManager());
            if(user.getPozita().equals("Administrator"))
               t.setPriority(true);
            else 
               t.setPriority(false);

            t.setVisible(true);
            dispose();
        }
       }catch (NoResultException nre){
           JOptionPane.showMessageDialog(null,"Gabimm ");
           usertxtf.setText("");
           pass.setText("");
       }
       catch(AppException ae){
           JOptionPane.showMessageDialog(null, ae.getMessage());
       }
       
    }
    
    
  
    public static void main(String args[])throws Exception {
        
        /*Splash s=new Splash();
                s.setVisible(true);
                Thread t=Thread.currentThread();
                t.sleep(4000);
                s.dispose();*/
                
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                
                try {
                    Login log=new Login();
                    if(userir.CheckAdminExists()==0){
                        new checkSystemAdmin().setVisible(true);
                    }
                    else{
                    log.setVisible(true);
                    }
                    
                } catch (AppException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField serveriptxtf;
    private javax.swing.JTextField usertxtf;
    // End of variables declaration//GEN-END:variables
private void close()
{
    WindowEvent winClosing=new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
    
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);

}
}
